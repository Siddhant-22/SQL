USE CSVKIT;
 

DELIMITER $$
CREATE FUNCTION ADD_TO_COLUMN(A INT)
RETURNS int
DETERMINISTIC
BEGIN
     DECLARE B INT ;
     SET B = A + 20 ;
     RETURN B ;
END $$

CREATE TABLE TEST(
A INT(10),
B VARCHAR(10))

INSERT INTO TEST VALUES(10,'JALPA'),
(20,'SID'),
(30,'RUTVIK')

SELECT * FROM TEST;

SELECT A,ADD_TO_COLUMN(A) FROM TEST;

USE CSVKIT;

DELIMITER $$
CREATE FUNCTION FINAL_PROFITS(PROFIT INT, DISCOUNT INT)
RETURNS INT 
DETERMINISTIC
BEGIN
DECLARE FINAL_PROFIT INT;
SET FINAL_PROFIT = PROFIT - DISCOUNT;
RETURN FINAL_PROFIT;
END $$

SELECT PROFIT, DISCOUNT, FINAL_PROFITS(PROFIT, DISCOUNT) FROM sales_data_final;

DELIMITER $$
CREATE FUNCTION FINAL_PROFITS_REAL(PROFIT DECIMAL(20,4), DISCOUNT DECIMAL(10,4), SALES DECIMAL(10,4))
RETURNS INT 
DETERMINISTIC
BEGIN
DECLARE FINAL_PROFIT INT;
SET FINAL_PROFIT = PROFIT - SALES * DISCOUNT;
RETURN FINAL_PROFIT;
END $$

SELECT PROFIT, DISCOUNT, SALES, FINAL_PROFITS_REAL(PROFIT, DISCOUNT, SALES) FROM sales_data_final

ALTER TABLE sales_data_final
ADD COLUMN FINALPROFIT INT;
UPDATE SALES_DATA_FINAL SET FINALPROFIT = FINAL_PROFITS(PROFIT, DISCOUNT);

ALTER TABLE sales_data_final
ADD COLUMN FINALPROFITREAL INT;
UPDATE SALES_DATA_FINAL SET FINALPROFITREAL = FINAL_PROFITS_REAL(PROFIT, DISCOUNT, SALES);
#IF ELSE
DELIMITER $$
CREATE FUNCTION MARK_SALES(SALES INT)
RETURNS VARCHAR(30) 
DETERMINISTIC
BEGIN
DECLARE FLAG_SALES VARCHAR(30);
IF SALES <= 100 THEN
       SET FLAG_SALES = ' SUPER AFFORDABLE PRODUCT ';
ELSEIF SALES > 100 AND SALES < 300 THEN
       SET FLAG_SALES = ' AFFORDABLE ';
ELSEIF SALES > 300 AND SALES < 600 THEN
       SET FLAG_SALES = ' MODERATE PRICE '; 
ELSE
       SET FLAG_SALES = ' EXPENSIVE ';
END IF;
RETURN FLAG_SALES;
END $$

ALTER TABLE SALES_DATA_FINAL DROP COLUMN FLAGSALES;
ALTER TABLE SALES_DATA_FINAL DROP COLUMN FLAGSALES1;
ALTER TABLE SALES_DATA_FINAL DROP COLUMN FLAGSALES3;
ALTER TABLE SALES_DATA_FINAL DROP COLUMN FLAGSALES4;

SELECT SALES, MARK_SALES(SALES) FROM sales_data_final
SELECT * FROM sales_data_final LIMIT 5;

ALTER TABLE sales_data_final
ADD COLUMN FLAGSALES2 VARCHAR(30) ;
UPDATE SALES_DATA_FINAL SET FLAGSALES2 = MARK_SALES(SALES); 